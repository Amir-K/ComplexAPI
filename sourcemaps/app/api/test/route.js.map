{"version":3,"file":"../app/api/test/route.js","mappingsmBA,CAAC,OAAOE;IAC5C,MAAMC,WAAW;QACfC,SAAS;QACTC,WAAW,IAAIC,OAAOC,WAAW;QACjCC,MAAM;YACJC,OAAO;gBACL;oBAAEC,IAAI;oBAAGC,MAAM;gBAAS;gBACxB;oBAAED,IAAI;oBAAGC,MAAM;gBAAS;gBACxB;oBAAED,IAAI;oBAAGC,MAAM;gBAAS;aACzB;QACH;IACF;IAEA,OAAOZ,mBAAYA,CAACa,IAAI,CAACT;AAC3B,GAAG;;;ACjB4F;AACvC;AACqB;AACH;AAC1E;AACA;AACA;AACA,wBAAwB,mCAAmB;AAC3C;AACA,cAAc,oBAAS;AACvB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY;AACZ,CAAC;AACD;AACA;AACA;AACA,QAAQ,sDAAsD;AAC9D;AACA,WAAW,0BAAW;AACtB;AACA;AACA,KAAK;AACL;AAC0F;;AAE1F;;;;;;;;AC/BA","sources":["webpack://my-app/external node-commonjs \"node:process\"","webpack://my-app/external commonjs \"next/dist/server/app-render/after-task-async-storage.external.js\"","webpack://my-app/external node-commonjs \"node:buffer\"","webpack://my-app/external commonjs \"next/dist/compiled/next-server/app-page.runtime.prod.js\"","webpack://my-app/external commonjs2 \"assert\"","webpack://my-app/external node-commonjs \"node:zlib\"","webpack://my-app/external commonjs2 \"os\"","webpack://my-app/external commonjs2 \"stream\"","webpack://my-app/external commonjs2 \"util\"","webpack://my-app/external commonjs2 \"fs\"","webpack://my-app/external commonjs \"next/dist/server/app-render/work-async-storage.external.js\"","webpack://my-app/external commonjs2 \"path\"","webpack://my-app/external node-commonjs \"node:assert\"","webpack://my-app/external node-commonjs \"node:http\"","webpack://my-app/external node-commonjs \"node:stream/web\"","webpack://my-app/external commonjs2 \"inspector\"","webpack://my-app/external node-commonjs \"node:https\"","webpack://my-app/external commonjs \"next/dist/compiled/next-server/app-route.runtime.prod.js\"","webpack://my-app/external node-commonjs \"node:string_decoder\"","webpack://my-app/external commonjs2 \"crypto\"","webpack://my-app/external commonjs2 \"https\"","webpack://my-app/external node-commonjs \"node:stream\"","webpack://my-app/external node-commonjs \"node:util\"","webpack://my-app/external commonjs \"next/dist/server/app-render/work-unit-async-storage.external.js\"","webpack://my-app/external node-commonjs \"node:fs\"","webpack://my-app/external node-commonjs \"node:url\"","webpack://my-app/external commonjs2 \"worker_threads\"","webpack://my-app/external commonjs2 \"zlib\"","webpack://my-app/external node-commonjs \"node:path\"","webpack://my-app/external node-commonjs \"node:net\"","webpack://my-app/external node-commonjs \"node:crypto\"","webpack://my-app/external commonjs2 \"stream/promises\"","webpack://my-app/external node-commonjs \"node:events\"","webpack://my-app/external commonjs2 \"buffer\"","webpack://my-app/external commonjs2 \"url\"","webpack://my-app/external commonjs2 \"child_process\"","webpack://my-app/external commonjs2 \"http\"","webpack://my-app/external commonjs2 \"tty\"","webpack://my-app/external commonjs2 \"async_hooks\"","webpack://my-app/./app/api/test/route.ts","webpack://my-app/?0ac6","webpack://my-app/external commonjs2 \"events\""],"sourcesContent":["module.exports = require(\"node:process\");","module.exports = require(\"next/dist/server/app-render/after-task-async-storage.external.js\");","module.exports = require(\"node:buffer\");","module.exports = require(\"next/dist/compiled/next-server/app-page.runtime.prod.js\");","module.exports = require(\"assert\");","module.exports = require(\"node:zlib\");","module.exports = require(\"os\");","module.exports = require(\"stream\");","module.exports = require(\"util\");","module.exports = require(\"fs\");","module.exports = require(\"next/dist/server/app-render/work-async-storage.external.js\");","module.exports = require(\"path\");","module.exports = require(\"node:assert\");","module.exports = require(\"node:http\");","module.exports = require(\"node:stream/web\");","module.exports = require(\"inspector\");","module.exports = require(\"node:https\");","module.exports = require(\"next/dist/compiled/next-server/app-route.runtime.prod.js\");","module.exports = require(\"node:string_decoder\");","module.exports = require(\"crypto\");","module.exports = require(\"https\");","module.exports = require(\"node:stream\");","module.exports = require(\"node:util\");","module.exports = require(\"next/dist/server/app-render/work-unit-async-storage.external.js\");","module.exports = require(\"node:fs\");","module.exports = require(\"node:url\");","module.exports = require(\"worker_threads\");","module.exports = require(\"zlib\");","module.exports = require(\"node:path\");","module.exports = require(\"node:net\");","module.exports = require(\"node:crypto\");","module.exports = require(\"stream/promises\");","module.exports = require(\"node:events\");","module.exports = require(\"buffer\");","module.exports = require(\"url\");","module.exports = require(\"child_process\");","module.exports = require(\"http\");","module.exports = require(\"tty\");","module.exports = require(\"async_hooks\");","import { NextResponse } from \"next/server\";\r\nimport { withInstrumentation } from \"livedebugger\";\r\n\r\nexport const GET = withInstrumentation(async (_request: Request) => {\r\n  const testData = {\r\n    message: \"Hello from the test API!\",\r\n    timestamp: new Date().toISOString(),\r\n    data: {\r\n      items: [\r\n        { id: 1, name: \"Item 1\" },\r\n        { id: 2, name: \"Item 2\" },\r\n        { id: 3, name: \"Item 3\" },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return NextResponse.json(testData);\r\n});","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"C:\\\\Git\\\\ComplexAPI\\\\app\\\\api\\\\test\\\\route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/test/route\",\n        pathname: \"/api/test\",\n        filename: \"route\",\n        bundlePath: \"app/api/test/route\"\n    },\n    resolvedPagePath: \"C:\\\\Git\\\\ComplexAPI\\\\app\\\\api\\\\test\\\\route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","module.exports = require(\"events\");"],"names":["NextResponse","withInstrumentation","GET","_request","testData","message","timestamp","Date","toISOString","data","items","id","name","json"],"sourceRoot":""}